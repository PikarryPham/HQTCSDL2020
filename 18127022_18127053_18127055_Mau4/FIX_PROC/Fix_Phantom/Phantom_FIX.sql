USE QLBAN_THUENHA
GO

/*Lỗi Phantom*/

/*Hàm generate ra mã nhà mới*/
/*Function tạo mã nhà tự động*/
IF OBJECT_ID('GENERATE_MANHA') IS NOT NULL
	DROP FUNCTION dbo.GENERATE_MANHA
GO


CREATE FUNCTION GENERATE_MANHA ()
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @MANHA CHAR(5);
	DECLARE @INDEX INT = 2;
	SET @MANHA = 'N0001';
	WHILE(EXISTS (SELECT NHA.MA_NHA FROM NHA WHERE NHA.MA_NHA = @MANHA)) --Lay MANHA co trong NHA + 1
		BEGIN
			IF (@INDEX < 10)
			BEGIN
				SET @MANHA = 'N000' + CONVERT(CHAR(5),@INDEX)
			END
			ELSE IF (@INDEX >= 10 AND @INDEX < 100)
			BEGIN
				SET @MANHA = 'N00' + CONVERT(CHAR(5),@INDEX)
			END
			ELSE IF (@INDEX >= 100 AND @INDEX < 1000)
			BEGIN
				SET @MANHA = 'N0' + CONVERT(CHAR(5),@INDEX)
			END
			SET @INDEX = @INDEX + 1
		END
	RETURN @MANHA
END
GO

/*CHỨC NĂNG 1*/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('THONGKE_FIX','P') IS NOT NULL
	DROP PROC THONGKE_FIX
GO

CREATE PROCEDURE THONGKE_FIX @MANV CHAR(5) = 'NV001',@QUAN NVARCHAR(30) = NULL, @TPHO NVARCHAR(40) = 'TP.HCM', @RETURNCODE INT OUTPUT, @RETURNMESS NVARCHAR(100) OUTPUT
AS
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
	BEGIN TRY
		IF (NOT EXISTS (SELECT * FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV))
		BEGIN
			PRINT N'Không tồn tại mã nhân viên này';
			SET @RETURNCODE = 1;
			SET @RETURNMESS = N'Không tồn tại mã nhân viên này';
			ROLLBACK TRANSACTION;
			RETURN;
		END
		DECLARE @CHINHANH_LAMVIEC CHAR(5) = (SELECT NHANVIEN.LAMVIEC FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV)
		--Danh sách các nhà cần bán/cho thuê trong 3 tháng trở lại đây
		IF(@QUAN IS NULL AND @TPHO IS NOT NULL)
		BEGIN 
			SELECT N.MA_NHA, N.SLPHONG, N.VIEW_NHA, N.NVPT, N.MA_CN, N.MA_CNHA, LN.TENLN, N.NGAYDANG, N.TRANGTHAI
			FROM NHA AS N, LOAINHA AS LN, DCHINHA AS DC
			WHERE N.MA_CN = @CHINHANH_LAMVIEC AND LN.MA_LN = N.MALN AND DC.MA_NHA = N.MA_NHA AND DC.TPHO = @TPHO
		END
		-- REPORT THỐNG KÊ DANH SÁCH CÁC NHÀ ĐƯỢC ĐĂNG BÁN/CHO THUÊ Ở XXX TRONG 3 THÁNG 
		PRINT N'BÁO CÁO THỐNG KÊ DANH SÁCH CÁC NHÀ ĐƯỢC ĐĂNG BÁN/CHO THUÊ Ở' + @TPHO 
		DECLARE @NGAYBAOCAO DATE = CONVERT (date, SYSDATETIME());
		-- In thông tin nhân viên làm báo cáo
			SELECT NHANVIEN.TEN_NV, @NGAYBAOCAO, NHANVIEN.LAMVIEC
			FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV;
			--ĐỂ TEST
		WAITFOR DELAY '00:00:06'
		-- In danh sách nhà 
			SELECT N.MA_NHA, N.SLPHONG, N.VIEW_NHA, N.NVPT, N.MA_CN, N.MA_CNHA, LN.TENLN, N.NGAYDANG, N.TRANGTHAI
			FROM NHA AS N, LOAINHA AS LN, DCHINHA AS DC
			WHERE N.MA_CN = @CHINHANH_LAMVIEC AND LN.MA_LN = N.MALN AND DC.MA_NHA = N.MA_NHA AND DC.TPHO = @TPHO
		-- Tổng số lượng nhà đã bán/cho thuê
			SELECT COUNT(*) AS SUMNHADABAN_THUE 
			FROM NHA, DCHINHA
			WHERE NHA.MA_CN = @CHINHANH_LAMVIEC AND DCHINHA.MA_NHA = NHA.MA_NHA AND DCHINHA.TPHO = @TPHO AND NHA.TRANGTHAI = 1
			GROUP BY NHA.TRANGTHAI
		-- Tổng số lượng nhà chưa bán/chưa cho thuê
			SELECT COUNT(*) AS SUMNHACHUABAN_THUE
			FROM NHA, DCHINHA
			WHERE NHA.MA_CN = @CHINHANH_LAMVIEC AND DCHINHA.MA_NHA = NHA.MA_NHA AND DCHINHA.TPHO = @TPHO AND NHA.TRANGTHAI = 0
			GROUP BY NHA.TRANGTHAI
		SET @RETURNCODE = 0;
	END TRY
	BEGIN CATCH
		PRINT N'Không thể báo cáo'
		SET @RETURNCODE = 1;
		SET @RETURNMESS = N'Không thể báo cáo'
		ROLLBACK TRANSACTION
		RETURN;
	END CATCH
COMMIT TRANSACTION 

/*CHỨC NĂNG 2*/
/*Transaction thêm nhà bán mới*/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('INSERT_HOUSE_BAN_CHUNHA_FIX','P') IS NOT NULL
	DROP PROC INSERT_HOUSE_BAN_CHUNHA
GO
CREATE PROCEDURE INSERT_HOUSE_BAN_CHUNHA_FIX
@LOAINHA CHAR(5), 
@NGAYHETHAN DATE, 
@SLPHONG INTEGER, 
@TINHTRANG NVARCHAR(100), 
@GIABAN INTEGER,
@KHUVUC NVARCHAR(30),
@DUONG NVARCHAR(30),
@QUAN NVARCHAR(30),
@TPHO NVARCHAR(40),
@CHINHANHDK CHAR(5),
@DIEUKIENCHUNHA NVARCHAR(50),
@RETURNCODE INT OUTPUT,
@RETURNMESS NVARCHAR(100) OUTPUT
AS
BEGIN TRANSACTION 
	BEGIN TRY
		DECLARE @MANHAMOI CHAR(5);
		SET @MANHAMOI = (SELECT dbo.GENERATE_MANHA() AS MANHADUOCTAO);
		DECLARE @NGAYDANGBAI DATE = CONVERT (date, SYSDATETIME());
		--Nếu loại nhà insert vào không tồn tại
		IF NOT EXISTS (SELECT * FROM LOAINHA WHERE LOAINHA.MA_LN = @LOAINHA)
		BEGIN
			PRINT N'Loại nhà này không tồn tại'
			SET @RETURNCODE = 1;
			SET @RETURNMESS = N'Loại nhà này không tồn tại'
			ROLLBACK TRANSACTION
			RETURN;
		END
		--Nếu chi nhánh đăng ký insert vào không tồn tại
		IF NOT EXISTS (SELECT * FROM CHINHANH WHERE CHINHANH.MA_CN = @CHINHANHDK)
		BEGIN
			PRINT N'Chi nhánh này không tồn tại'
			SET @RETURNCODE = 1;
			SET @RETURNMESS = N'Chi nhánh này không tồn tại'
			ROLLBACK TRANSACTION
			RETURN;
		END
		--Mặc định lấy mã nhân viên đầu tiên có làm việc tại chi nhánh được truyền vào, sau này nếu sửa đổi thì do trưởng phòng sửa
		DECLARE @NVPHUTRACH CHAR(5) = (SELECT TOP 1 NHANVIEN.MA_NV FROM NHANVIEN
											WHERE NHANVIEN.LAMVIEC = @CHINHANHDK
														ORDER BY NHANVIEN.MA_NV ASC)
		INSERT INTO NHA(MA_NHA,NGAYDANG,NGAYHETHAN,SLPHONG,TINHTRANG,VIEW_NHA,NVPT,MA_CN,MALN,MA_CNHA,TRANGTHAI)
		VALUES(@MANHAMOI,@NGAYDANGBAI,@NGAYHETHAN,@SLPHONG,@TINHTRANG,0,@NVPHUTRACH,@CHINHANHDK,@LOAINHA,'CN001',0)

		INSERT INTO NHABAN VALUES(@MANHAMOI, @GIABAN, @DIEUKIENCHUNHA);
		INSERT INTO DCHINHA VALUES(@MANHAMOI, @KHUVUC, @DUONG, @QUAN, @TPHO);
	END TRY
	BEGIN CATCH
		PRINT N'Không thể insert thêm nhà mới'
		SET @RETURNCODE = 1;
		SET @RETURNMESS = N'Không thể insert thêm nhà mới'
		ROLLBACK TRANSACTION
		RETURN;
	END CATCH
	PRINT N'Thêm nhà bán mới thành công'
	SET @RETURNCODE = 0;
	SET @RETURNMESS = N'Thêm nhà bán mới thành công'
COMMIT TRANSACTION

/*Fix hàm thống kê cho phù hợp để chạy UI*/
ALTER PROCEDURE [dbo].[THONGKE_FIX] @MANV CHAR(5) = 'NV001',@QUAN NVARCHAR(30) = NULL, @TPHO NVARCHAR(40) = 'TP.HCM', @RETURNCODE INT OUTPUT, @RETURNMESS NVARCHAR(100) OUTPUT
AS
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
	BEGIN TRY
		IF (NOT EXISTS (SELECT * FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV))
		BEGIN
			PRINT N'Không tồn tại mã nhân viên này';
			SET @RETURNCODE = 1;
			SET @RETURNMESS = N'Không tồn tại mã nhân viên này';
			ROLLBACK TRANSACTION;
			RETURN;
		END
		DECLARE @CHINHANH_LAMVIEC CHAR(5) = (SELECT NHANVIEN.LAMVIEC FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV)
		--Danh sách các nhà cần bán/cho thuê trong 3 tháng trở lại đây
		--IF(@QUAN IS NULL AND @TPHO IS NOT NULL)
		--BEGIN 
			SELECT N.MA_NHA, N.SLPHONG, N.VIEW_NHA, N.NVPT, N.MA_CN, N.MA_CNHA, LN.TENLN, N.NGAYDANG, N.TRANGTHAI
			FROM NHA AS N, LOAINHA AS LN, DCHINHA AS DC
			WHERE N.MA_CN = @CHINHANH_LAMVIEC AND LN.MA_LN = N.MALN AND DC.MA_NHA = N.MA_NHA AND (@TPHO is null or DC.TPHO = @TPHO)
		--END
		-- REPORT THỐNG KÊ DANH SÁCH CÁC NHÀ ĐƯỢC ĐĂNG BÁN/CHO THUÊ Ở XXX TRONG 3 THÁNG 
		PRINT N'BÁO CÁO THỐNG KÊ DANH SÁCH CÁC NHÀ ĐƯỢC ĐĂNG BÁN/CHO THUÊ Ở' + @TPHO 
		DECLARE @NGAYBAOCAO DATE = CONVERT (date, SYSDATETIME());
		-- In thông tin nhân viên làm báo cáo
			SELECT NHANVIEN.TEN_NV, @NGAYBAOCAO, NHANVIEN.LAMVIEC
			FROM NHANVIEN WHERE NHANVIEN.MA_NV = @MANV;
			--ĐỂ TEST
		WAITFOR DELAY '00:00:06'
		-- In danh sách nhà 
			SELECT N.MA_NHA, N.SLPHONG, N.VIEW_NHA, N.NVPT, N.MA_CN, N.MA_CNHA, LN.TENLN, N.NGAYDANG, N.TRANGTHAI
			FROM NHA AS N, LOAINHA AS LN, DCHINHA AS DC
			WHERE N.MA_CN = @CHINHANH_LAMVIEC AND LN.MA_LN = N.MALN AND DC.MA_NHA = N.MA_NHA AND (@TPHO is null or DC.TPHO = @TPHO)
		-- Tổng số lượng nhà đã bán/cho thuê
			select isnull((SELECT COUNT(*)
			FROM NHA, DCHINHA
			WHERE NHA.MA_CN = @CHINHANH_LAMVIEC AND DCHINHA.MA_NHA = NHA.MA_NHA AND (@TPHO is null or DCHINHA.TPHO = @TPHO) AND NHA.TRANGTHAI = 1
			GROUP BY NHA.TRANGTHAI), 0) AS SUMNHADABAN_THUE 
		-- Tổng số lượng nhà chưa bán/chưa cho thuê
			select isnull((SELECT COUNT(*)
			FROM NHA, DCHINHA
			WHERE NHA.MA_CN = @CHINHANH_LAMVIEC AND DCHINHA.MA_NHA = NHA.MA_NHA AND (@TPHO is null or DCHINHA.TPHO = @TPHO) AND NHA.TRANGTHAI = 0
			GROUP BY NHA.TRANGTHAI), 0) AS SUMNHACHUABAN_THUE
		SET @RETURNCODE = 0;
	END TRY
	BEGIN CATCH
		PRINT N'Không thể báo cáo'
		SET @RETURNCODE = 1;
		SET @RETURNMESS = N'Không thể báo cáo'
		ROLLBACK TRANSACTION
		RETURN;
	END CATCH
COMMIT TRANSACTION

DECLARE @CODE INT,@MESS NVARCHAR(100)
EXEC THONGKE_FIX 'NV001',NULL,'TP.HCM', @RETURNCODE = @CODE, @RETURNMESS = @MESS
